
# Use this script to capture the changed configuration files after patching
# glpk's configure.ac, src/Makefile.am, and examples/Makefile.am and running
# run_autotools.

# Note that glpk's config.h.in is hand-crafted. We don't want the new,
# autogenerated version.

wgetcmd=wget
glpk_ver=4.65

glpk_config_patch=glpk-${glpk_ver}_config.patch
glpk_config_tar=glpk-${glpk_ver}_config.tar

if [[ ! -r "$glpk_config_patch" ]] ; then
  echo "Cannot find configuration patch file '$glpk_config_patch'. Aborting"
  exit 1
fi

newConfigFiles=(configure.ac src/Makefile.am examples/Makefile.am)
newConfigFiles+=(aclocal.m4 compile config.guess depcomp install-sh missing)
newConfigFiles+=(ltmain.sh)
newConfigFiles+=(configure Makefile.in src/Makefile.in examples/Makefile.in)

# Pull down a fresh copy of glpk

echo "Downloading the source code from ftp.gnu.org ..."
$wgetcmd ftp://ftp.gnu.org/gnu/glpk/glpk-${glpk_ver}.tar.gz

echo "Uncompressing the tarball..."
gunzip -f glpk-${glpk_ver}.tar.gz

if test -d glpk ; then
  echo "Moving current glpk to glpk.OLD."
  if test -d glpk.OLD ; then
    rm -rf glpk.OLD
  fi
  mv glpk glpk.OLD
fi

echo "Unpacking the source code..."
tar xf glpk-${glpk_ver}.tar

echo "Deleting the tar file..."
rm glpk-${glpk_ver}.tar

mv glpk-${glpk_ver} glpk

echo "Patching configuration source files ..."
patch -p0 < ${glpk_config_patch}

echo "Running autotools on patched source ..."
run_autotools -f glpk

echo "Capturing modified configuration files ..."
pushd glpk &>/dev/null
tar cf ../${glpk_config_tar} "${newConfigFiles[@]}"
popd &>/dev/null

