#!/bin/sh

set -e
glpk_ver=4.65
glpk_config_tar=glpk-${glpk_ver}_config.tar

wgetcmd=wget
wgetcount=`which wget 2>/dev/null | wc -l`
if test ! $wgetcount = 1; then
  echo "Utility wget not found in your PATH."
  if test `uname` = Darwin; then
    wgetcmd="curl -L -O"
    echo "Using curl instead."
  elif test `uname` = FreeBSD; then
    wgetcmd=fetch
    echo "Using fetch instead."
  else
    exit -1
  fi
fi

echo " "
echo "Running script to download the source code for GLPK $glpk_ver."
echo " "

rm -f glpk*.tar.gz

echo "Downloading the source code from ftp.gnu.org..."
$wgetcmd ftp://ftp.gnu.org/gnu/glpk/glpk-${glpk_ver}.tar.gz

echo "Uncompressing the tarball..."
gunzip -f glpk-${glpk_ver}.tar.gz

if test -d glpk ; then
  echo "Moving current glpk to glpk.OLD."
  if test -d glpk.OLD ; then
    rm -rf glpk.OLD
  fi
  mv glpk glpk.OLD
fi

echo "Unpacking the source code..."
tar xf glpk-${glpk_ver}.tar

echo "Deleting the tar file..."
rm glpk-${glpk_ver}.tar

mv glpk-${glpk_ver} glpk

echo " "
echo "Done downloading the source code for GLPK."
echo "Applying patch file."

if test -r "$glpk_config_tar" ; then
  echo "Installing modified configuration files."
  tar -x -f ${glpk_config_tar} --directory=glpk
fi 

echo "Touch every source file to force rebuild of whole package."

if ls glpk/src/*.c &>/dev/null ; then
  touch glpk/src/*.c
fi
if ls glpk/src/*/*.c &>/dev/null ; then
  touch glpk/src/*/*.c
fi

echo " "
echo "Verify that there are no error message in the output above."
